---
name: Titanium.Media
summary: The top-level Media module.
description: |
    The Media module is used to access the device's media-related functionality, such
    as using the device's camera and photo gallery, playing media files, or recording
    audio or video.

    For examples of using the Media APIs, refer to the
    [Working with Media APIs guide](http://docs.appcelerator.com/titanium/latest/#!/guide/Working_with_Media_APIs)
    in addition to the other media submodule API documentation.
extends: Titanium.Module
since: "0.1"
platforms: [android, iphone, ipad, mobileweb, tizen]
methods:
  - name: beep
    summary: Plays a device beep notification.
    platforms: [iphone, ipad]
  - name: hideCamera
    summary: Hides the device camera UI. 
    description: |
        Must be called after calling `showCamera` and only when `autohide` is set to `false`. 
        This method causes the media capture UI to be hidden.
    platforms: [iphone, ipad]
  - name: hideMusicLibrary
    summary: Hides the music library.  
    description: |
        Must be called after calling [openMusicLibrary](Titanium.Media.openMusicLibrary) 
        and only when `autohide` is set to `false`.
    platforms: [iphone, ipad]
  - name: isMediaTypeSupported
    summary: Returns `true` if the source supports the specified media type.
    description: |
        You can query whether a given media type is supported by the device's
        camera (`source` == 'camera') or photo library (`source` == 'photo').  

        An additional value, `photogallery` can be  used to query the media 
        supported by the device's camera roll or saved image album, which is a 
        subset of the iOS photo library. However, when calling 
        [openPhotoGallery](Titanium.Media.openPhotoGallery) on iOS, the entire 
        library is displayed, and there is currently no way to restrict the 
        gallery to show only the camera roll/saved images album. 
    returns:
        type: Boolean
    parameters:
      - name: source
        summary: |
            Media source specified as a string: `camera` for Camera or `photo` for Photo Library.
        type: String
      - name: type
        summary: Media type to check, either `MEDIA_TYPE_PHOTO` or `MEDIA_TYPE_VIDEO`.
        type: String
    platforms: [iphone, ipad]
  - name: openMusicLibrary
    summary: Shows the music library and allows the user to select one or more tracks.
    description: |
        If `autohide` is set to `false`, you must hide the library explicitly using 
        [hideMusicLibrary](Titanium.Media.hideMusicLibrary).

        #### Tizen Platform Notes

        From the `options` parameter, only the `success` and `error` fields are used. The
        `success` callback is called when the music library is opened, but not when an item is
        selected. Notificationa about item selection is currently not supported.
        
    platforms: [iphone, ipad]
    parameters:
      - name: options
        summary: A dictionary of options as described in <MusicLibraryOptionsType>.
        type: MusicLibraryOptionsType
  - name: openPhotoGallery
    summary: Opens the photo gallery image picker.
    description: |
        #### Tizen Platform Notes

        To use this method on Tizen, you must include the following privileges 
        in the `tiapp.xml` file of your Titanium application: 

        * `http://tizen.org/privilege/application.launch`
        * `http://tizen.org/privilege/filesystem.read`

        These are public-level privileges.

        From the `options` parameter, only the `success` and `error` fields are used. 
        
    platforms: [iphone, ipad, android, tizen]
    parameters:
      - name: options
        summary: Photo gallery options as described in <PhotoGalleryOptionsType>.
        type: PhotoGalleryOptionsType
  - name: previewImage
    summary: Displays the given image.
    platforms: [android]
    parameters:
      - name: options
        summary: Dictionary containing the image and callback functions.
        type: Dictionary<PreviewImageOptions>
  - name: saveToPhotoGallery
    summary: Saves media to the device's photo gallery / camera roll.
    description: |
        This operation is asynchronous. The caller can supply callbacks to be triggered when the
        save operation completes.

        Media can be passed as either a `Blob` object or a `File` object. If the `media` argument
        is not one of these types, an error is generated.

        Note that when passing a file (or a blob created from a file), the file name must 
        have the appropriate extension for the data--for example, `image.jpg` or `video1.mov` work,
        but `video1.tmp` does not. Currently, the `.mp4` extension is not supported, but MP4
        files may be imported by saving them with the `.mov` extension.

        #### Tizen Platform Notes

        To use this method on Tizen, you must include the following privileges 
        in the `tiapp.xml` file of your Titanium application: 

        * `http://tizen.org/privilege/application.launch`
        * `http://tizen.org/privilege/filesystem.read`
        * `http://tizen.org/privilege/filesystem.write`

        These are public-level privileges.

        From the `options` parameter, only the `success` and `error` fields are used.
        
    platforms: [iphone, ipad, tizen]
    parameters:
      - name: media
        summary: Media to save to the camera roll or media gallery. 
        type: [Titanium.Blob, Titanium.Filesystem.File]
      - name: callbacks
        summary: |
            Pass a dictionary with the following supported keys: `success` a function that 
            will be called when the save succeeds, and `error` a function that will be 
            called upon receiving an error.
        type: Object
  - name: showCamera
    summary: Shows the camera.
    description: |
        By default, the native camera controls are displayed. To add your own camera controls,
        you can add an overlay view by setting the `overlay` property on the `options` argument.

        #### iOS Platform Notes

        To suppress the default controls, set `showControls` and `autohide` to `false`.

        If the `showControls` option is `false`, you must control the camera explicitly, using
        the [takePicture](Titanium.Media.takePicture) and [hideCamera](Titanium.Media.hideCamera) 
        methods.
        
        #### Tizen Platform Notes
        
        To use this method on Tizen, you must include the following privilege
        in the `tiapp.xml` file of your Titanium application: 

        * `http://tizen.org/privilege/application.launch`
        
        This is a public-level privilege.

        From the `options` parameter, only the `success` and `error` fields are used. 
        
    platforms: [iphone, ipad, android, tizen]
    parameters:
      - name: options
        summary: A dictionary of camera options as described in <CameraOptionsType>.
        type: CameraOptionsType
  - name: queryMusicLibrary
    summary: Searches the music library for items matching the specified search predicates.
    platforms: [iphone, ipad]
    parameters:
      - name: query
        summary: The query object to extract information from.
        type: MediaQueryType
    returns:
        type: Array<Titanium.Media.Item>
  - name: startMicrophoneMonitor
    summary: Starts monitoring the microphone sound level.
    platforms: [iphone, ipad]
  - name: stopMicrophoneMonitor
    summary: Stops monitoring the microphone sound level.
    platforms: [iphone, ipad]
  - name: takePicture
    summary: Uses the device camera to capture a photo. 
    description: |
        Must be called after calling `showCamera` and only when `autohide` is set to `false`. 

        This method causes the media capture device to capture a photo and call the 
        `success` callback.
    platforms: [iphone, ipad, android]
  - name: takeScreenshot
    summary: Takes a screen shot of the visible UI on the device.
    description: |
       This method is asynchronous. The screenshot is returned in the callback argument.
       The callback argument's `media` property contains the screenshot image as a 
       [Blob](Titanium.Blob) object.
    parameters:
      - name: callback
        summary: Function to call upon capture. 
        type: Callback<ScreenshotResult>
    platforms: [iphone, ipad, android, tizen]
  - name: vibrate
    summary: Makes the device vibrate.
    description: |
        On Android, Mobile Web and Tizen, a `pattern` argument can be provided to specify a
        vibration pattern.

        The `pattern` is an array of Number values.  Each number in the array is 
        interpreted as a duration in milliseconds. The first number is the *delay* 
        before the pattern starts, and the remaining numbers are interpreted as 
        alternating periods of on and off times. For example, the following pattern:

        [ 0, 500, 100, 500, 100, 500 ] 

        Would cause the vibration to start immediately (delay = 0), and perform three
        long vibrations (500 ms) separated by short pauses (100ms).
        
        On Mobile Web and Tizen, calling `vibrate` without a `pattern` will stop the vibration.
    parameters: 
      - name: pattern
        summary: Array of values identifying a vibrate pattern (only used on Android).
        optional: true
        type: Array<Number>
    platforms: [iphone, ipad, android, mobileweb, tizen]
events:
  - name: linechange
    summary: Fired when an audio line type change is detected.
    platforms: [iphone, ipad]
  - name: recordinginput
    summary: Fired when the availablity of recording input changes.
    properties:
      - name: available
        summary: Indicates whether the recording device is available.
        type: Boolean
    platforms: [iphone, ipad]
  - name: volume
    summary: Fired when the volume output changes.
    properties:
      - name: volume
        summary: New volume level in dB.
        type: Number
    platforms: [iphone, ipad]
properties:
  - name: AUDIO_FILEFORMAT_3GP2
    summary: Audio file format 3GPP2.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_3GPP
    summary: Audio file format 3GPP.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_AIFF
    summary: Audio file format Audio Interchange File Format (AIFF).
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_AMR
    summary: Audio file format Adaptive Multi-Rate (AMR).
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_CAF
    summary: Audio file format Apple Compressed Audio Format (CAF).
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_MP3
    summary: Audio file format MP3.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_MP4
    summary: Audio file format MP4.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_MP4A
    summary: Audio file format MP4A.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FILEFORMAT_WAVE
    summary: Audio file format WAVE.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_AAC
    summary: Audio format MPEG4 AAC encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_ALAW
    summary: Audio format 8-bit aLaw encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_APPLE_LOSSLESS
    summary: Audio format Apple lossless encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_ILBC
    summary: Audio format iLBC encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_IMA4
    summary: Audio format Apple IMA4 encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_LINEAR_PCM
    summary: Audio format 16-bit, linear PCM encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_FORMAT_ULAW
    summary: Audio format 8-bit muLaw encoding.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_HEADPHONES
    summary: Line-type constant for headphones.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_HEADPHONES_AND_MIC
    summary: Line-type constant for headphones and microphone.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_HEADSET_INOUT
    summary: Line-type constant for headset in/out.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_LINEOUT
    summary: Line-type constant for line-out.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_MICROPHONE
    summary: Line-type constant for microphone.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_MUTED
    summary: Line-type constant indicated mute switch is on.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_RECEIVER_AND_MIC
    summary: Line-type constant indicating receiver and microphone.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SESSION_MODE_AMBIENT
    summary: For long-duration sounds such as rain, car engine noise, and so on. 
    description: |
        Also used for for 'play along' style applications, such a virtual piano that a 
        user plays over iPod audio.
        
        See also: [AUDIO_SESSION_MODE_SOLO_AMBIENT](Titanium.Media.AUDIO_SESSION_MODE_SOLO_AMBIENT).
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SESSION_MODE_PLAYBACK
    summary: Session mode for playing recorded music or other sounds that are central to the successful use of your application. 
    description: |
        When using this mode, your application audio continues with the Ring/Silent switch set 
        to silent or when the screen locks. This property normally disallows mixing iPod audio 
        with application audio.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SESSION_MODE_PLAY_AND_RECORD
    summary: Session mode for recording (input) and playback (output) of audio, such as for a VOIP (voice over IP) application. 
    description: |
        This category is appropriate for simultaneous recording and playback, and also for 
        applications that record and play back but not simultaneously. If you want to ensure 
        that sounds such as Messages alerts do not play while your application is recording, 
        use  <Titanium.Media.AUDIO_SESSION_MODE_RECORD> instead. This category normally 
        disallows mixing iPod audio with application audio.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SESSION_MODE_RECORD
    summary: Session mode for recording audio; it silences playback audio.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SESSION_MODE_SOLO_AMBIENT
    summary: Session mode for long-duration sounds such as rain, car engine noise, and so on. 
    description: |
        When you use this category, audio from built-in applications, such as the iPod, 
        is silenced. Your audio is silenced when the Ring/Silent switch is set to `silent` 
        or when the screen locks.

        To use long-duration sounds without silencing built-in applications, 
        see [AUDIO_SESSION_MODE_AMBIENT](Titanium.Media.AUDIO_SESSION_MODE_AMBIENT).
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_SPEAKER
    summary: Line-type constant for speaker output.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_UNAVAILABLE
    summary: Line-type constant indicating that audio is unavailable.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: AUDIO_UNKNOWN
    summary: Line-type constant indicating that line-type is unknown or not determined.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: DEVICE_BUSY
    summary: Constant for media device busy error.
    type: Number
    permission: read-only
  - name: MEDIA_TYPE_PHOTO
    summary: Media type constant for photo media.
    type: String
    permission: read-only
  - name: MEDIA_TYPE_VIDEO
    summary: Media type constant for video media.
    type: String
    permission: read-only
  - name: MUSIC_MEDIA_TYPE_ALL
    summary: Music library media containing any type of content.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_TYPE_ANY_AUDIO
    summary: Music library media containing any type of audio content.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_TYPE_AUDIOBOOK
    summary: Music library media containing audiobook content.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_TYPE_MUSIC
    summary: Music library media containing music content.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_TYPE_PODCAST
    summary: Music library media containing podcast content.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_TITLE
    summary: Constant for grouping query results by title.
    value: 0
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_ALBUM
    summary: Constant for grouping query results by album.
    value: 1
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_ARTIST
    summary: Constant for grouping query results by artist.
    platforms: [iphone, ipad]
    value: 2
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_ALBUM_ARTIST
    summary: Constant for grouping query results by album and artist.
    value: 3
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_COMPOSER
    summary: Constant for grouping query results by composer.
    value: 4
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_GENRE
    summary: Constant for grouping query results by genre.
    value: 5
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_PLAYLIST
    summary: Constant for grouping query results by playlist.
    value: 6
    type: Number    
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_MEDIA_GROUP_PODCAST_TITLE
    platforms: [iphone, ipad]
    summary: Constant for grouping query results by podcast title.
    value: 7
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_REPEAT_ALL
    summary: Constant for "Repeat All" setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_REPEAT_DEFAULT
    summary: Constant for user's default repeat setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_REPEAT_NONE
    summary: Constant for "No Repeat" setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_REPEAT_ONE
    summary: Constant for "Repeat one item" setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_SHUFFLE_ALBUMS
    summary: Constant for shuffling complete albums setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_SHUFFLE_DEFAULT
    summary: Constant for user's default shuffle setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_SHUFFLE_NONE
    summary: Constant for "no shuffle" setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_SHUFFLE_SONGS
    summary: Constant for shuffling songs setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_INTERRUPTED
    summary: Constant for interrupted state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_PAUSED
    summary: Constant for paused state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_PLAYING
    summary: Constant for playing state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_SEEK_BACKWARD
    summary: Constant for backward seek state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_SEEK_FORWARD
    summary: Constant for forward seek state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: MUSIC_PLAYER_STATE_STOPPED
    summary: Constant for stopped state.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: NO_CAMERA
    summary: Constant for media no camera error.
    type: Number
    permission: read-only
  - name: NO_VIDEO
    summary: Constant for media no video error.
    type: Number
    permission: read-only
  - name: QUALITY_HIGH
    summary: Media type constant for high-quality video recording. 
    description: |
        Recorded files are suitable for on-device playback and for wired transfer to the 
        Desktop using Image Capture; they are likely to be too large for transfer using Wi-Fi.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: QUALITY_LOW
    summary: Media type constant for low-quality video recording. 
    description: |
        Recorded files can usually be transferred over the cellular network.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: QUALITY_MEDIUM
    summary: Media type constant for medium-quality video recording. 
    description: |
        Recorded files can usually be transferred using Wi-Fi. This is the default video 
        quality setting.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: UNKNOWN_ERROR
    summary: Constant for unknown media error.
    type: Number
    permission: read-only
  - name: VIDEO_CONTROL_DEFAULT
    summary: Constant for default video controls.
    description: |
        Used in conjunction with the
        [mediaControlStyle](Titanium.Media.VideoPlayer.mediaControlStyle) property 
        of <Titanium.Media.VideoPlayer>.
    type: Number
    permission: read-only
  - name: VIDEO_CONTROL_EMBEDDED
    summary: Constant for video controls for an embedded view. 
    description: |
        Used in conjunction with the
        [mediaControlStyle](Titanium.Media.VideoPlayer.mediaControlStyle) property 
        of <Titanium.Media.VideoPlayer>.

        On Android, this constant has the same effect as VIDEO_CONTROL_DEFAULT. Video controls may
        only be shown or hidden. 
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_CONTROL_FULLSCREEN
    summary: Constant for fullscreen video controls. 
    description: |
        Used in conjunction with the
        [mediaControlStyle](Titanium.Media.VideoPlayer.mediaControlStyle) property 
        of <Titanium.Media.VideoPlayer>.

        On iOS, use VIDEO_CONTROL_FULLSCREEN when creating a video player that occupies the entire 
        screen, that is, the parent window should be a fullscreen window 
        ([fullscreen](Titanium.UI.Window.fullscreen) set to `true`) and the video player should 
        occupy the entirety of the parent window.

        If the user clicks the **Done** button in the fullscreen control bar, the video player 
        pauses playback and generates a [complete](Titanium.Media.VideoPlayer.complete) event. 

        Note that if you create a video player that does *not* occupy the entire screen, and later 
        switch to fullscreen mode, the video controls are switched automatically. That is, if 
        `mediaControlStyle` is set to VIDEO_CONTROL_DEFAULT or VIDEO_CONTROL_EMBEDDED, it is 
        automatically switched to the fullscreen controls when the player enters fullscreen mode. 
        This is true whether the user initiates the mode switch by clicking the fullscreen button
        in the embedded controls, or if you programmatically switch to full screen mode (by setting 
        the `fullscreen` property to true). 

        On Android, this constant has the same effect as VIDEO_CONTROL_DEFAULT. Video controls may 
        only be shown or hidden.  
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_CONTROL_HIDDEN
    summary: Constant for video controls hidden.
    description: |
        Used in conjunction with the
        [mediaControlStyle](Titanium.Media.VideoPlayer.mediaControlStyle) property 
        of <Titanium.Media.VideoPlayer>.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_CONTROL_NONE
    summary: Constant for no video controls. 
    description: |
        Used in conjunction with the
        [mediaControlStyle](Titanium.Media.VideoPlayer.mediaControlStyle) property 
        of <Titanium.Media.VideoPlayer>.
    type: Number
    permission: read-only
  - name: VIDEO_CONTROL_VOLUME_ONLY
    deprecated:
        since: "1.8.0"
        notes: Use <Titanium.Media.VIDEO_CONTROL_EMBEDDED> instead.
    summary: Constant for video controls volume only.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_FINISH_REASON_PLAYBACK_ENDED
    summary: Video playback ended normally.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_FINISH_REASON_PLAYBACK_ERROR
    summary: Video playback ended abnormally.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_FINISH_REASON_USER_EXITED
    summary: Video playback ended by user action (such as clicking the `Done` button).
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_LOAD_STATE_PLAYABLE
    summary: Current media is playable.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_LOAD_STATE_PLAYTHROUGH_OK
    summary: Playback will be automatically started in this state when `autoplay` is true.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_LOAD_STATE_STALLED
    summary: Playback will be automatically paused in this state, if started.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_LOAD_STATE_UNKNOWN
    summary: Current load state is not known.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_MEDIA_TYPE_AUDIO
    summary: A audio type of media in the movie returned by <Titanium.Media.VideoPlayer> `mediaTypes` property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_MEDIA_TYPE_NONE
    summary: An unknown type of media in the movie returned by <Titanium.Media.VideoPlayer> `mediaTypes` property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_MEDIA_TYPE_VIDEO
    summary: A video type of media in the movie returned by <Titanium.Media.VideoPlayer> `mediaTypes` property.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_PLAYBACK_STATE_INTERRUPTED
    summary: Video playback has been interrupted.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_PLAYBACK_STATE_PAUSED
    summary: Video playback is paused.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_PLAYBACK_STATE_PLAYING
    summary: Video is being played.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD
    summary: Video playback is rewinding.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_PLAYBACK_STATE_SEEKING_FORWARD
    summary: Video playback is seeking forward.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_PLAYBACK_STATE_STOPPED
    summary: Video playback is stopped.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad, mobileweb, tizen]
  - name: VIDEO_REPEAT_MODE_NONE
    summary: Constant for disabling repeat on video playback.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, mobileweb, tizen]
  - name: VIDEO_REPEAT_MODE_ONE
    summary: Constant for repeating one video (i.e., the one video will repeat constantly) during playback.
    type: Number
    permission: read-only
    platforms: [iphone, ipad, mobileweb, tizen]
  - name: VIDEO_SCALING_ASPECT_FILL
    summary: Scale video to fill the screen, clipping edges if necessary.
    description: |
        Video is scaled until the video fills the entire screen. Content at the edges 
        of the larger of the two dimensions is clipped so that the other dimension fits the 
        screen exactly. The aspect ratio of the movie is preserved.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_SCALING_ASPECT_FIT
    summary: Scale video to fit the screen, letterboxing if necessary.
    description: |
        Video is scaled until the larger dimension fits on the screen exactly. In the 
        other dimension, the region between the edge of the movie and the edge of the screen 
        is filled with a black bar. The aspect ratio of the movie is preserved.
    type: Number
    permission: read-only
  - name: VIDEO_SCALING_MODE_FILL
    summary: Video is scaled until both dimensions fit the screen exactly, stretching if necessary.
    description: |
        The aspect ratio of the video is not preserved.
    type: Number
    permission: read-only
    platforms: [android, iphone, ipad]
  - name: VIDEO_SCALING_NONE
    summary: Video scaling is disabled.
    type: Number
    permission: read-only
  - name: VIDEO_SOURCE_TYPE_FILE
    summary: Video source type is a file. 
    description: Related to the `sourceType` property of <Titanium.Media.VideoPlayer>.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_SOURCE_TYPE_STREAMING
    summary: Video source type is a remote stream. 
    description: Related to the `sourceType` property of <Titanium.Media.VideoPlayer>
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_SOURCE_TYPE_UNKNOWN
    summary: Video source type is unknown. 
    description: Related to the `sourceType` property of <Titanium.Media.VideoPlayer>
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_TIME_OPTION_EXACT
    summary: Use the exact time.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: VIDEO_TIME_OPTION_NEAREST_KEYFRAME
    summary: Use the closest keyframe in the time.
    type: Number
    permission: read-only
    platforms: [iphone, ipad]
  - name: appMusicPlayer
    summary: An instance of <Titanium.Media.MusicPlayer> representing the app-specific music player.
    type: Titanium.Media.MusicPlayer
    platforms: [iphone, ipad]
    permission: read-only
  - name: audioLineType
    summary: Returns the line type constant for the current line type.
    type: Number
    platforms: [iphone, ipad]
    permission: read-only
  - name: audioPlaying
    summary: Returns `true` if the device is playing audio.
    type: Boolean
    platforms: [iphone, ipad]
    permission: read-only
  - name: audioSessionMode
    summary: A constant for the audio session mode to be used.
    description: |
        Set to one of the `AUDIO_SESSION` constants defined in <Titanium.Media>.

        Must be set while the audio session is inactive (no sounds are playing, no listeners 
        for audio properties on the Media module, but the iPod may be active).
    type: Number
    platforms: [iphone, ipad]
  - name: availableCameraMediaTypes
    summary: Array of media type constants supported for the camera.
    type: Array<Object>
    platforms: [iphone, ipad]
  - name: availablePhotoGalleryMediaTypes
    summary: Array of media type constants supported for saving to the device's camera roll or saved images album.
    type: Array<Object>
    platforms: [iphone, ipad]
  - name: availablePhotoMediaTypes
    summary: Array of media type constants supported for the photo library.
    type: Array<Object>
    platforms: [iphone, ipad]
  - name: averageMicrophonePower
    summary: Current average microphone level in dB or -1 if microphone monitoring is disabled.
    description: |
        See [startMicrophoneMonitor](Titanium.Media.startMicrophoneMonitor), 
        [stopMicrophoneMonitor](Titanium.Media.stopMicrophoneMonitor).
    type: Number
    platforms: [iphone, ipad]
  - name: canRecord
    summary: |
        `true` if the device has a recording input device available.
    type: Boolean
    platforms: [iphone, ipad]
    permission: read-only
  - name: isCameraSupported
    summary: |
        `true` if the device has camera support.
    type: Boolean
    platforms: [iphone, ipad, android, tizen]
    permission: read-only
  - name: peakMicrophonePower
    summary: Current microphone level peak power in dB or -1 if microphone monitoring is disabled.
    description: |
        See [startMicrophoneMonitor](Titanium.Media.startMicrophoneMonitor), 
        [stopMicrophoneMonitor](Titanium.Media.stopMicrophoneMonitor).
    type: Number
    platforms: [iphone, ipad]
    permission: read-only
  - name: systemMusicPlayer
    summary: An instance of <Titanium.Media.MusicPlayer> representing the system-wide music player.
    type: Titanium.Media.MusicPlayer
    platforms: [iphone, ipad]
    permission: read-only
  - name: volume
    summary: Current volume of the playback device.
    type: Number
    platforms: [iphone, ipad]
    permission: read-only

# Pseudo-type for showMusicLibrary argument
---
name: MusicLibraryOptionsType
summary: Simple object for specifying options to [openMusicLibrary](Titanium.Media.openMusicLibrary).
platforms: [iphone, ipad]
properties:
  - name: success
    summary: Function to call when the music library selection is made.
    type: Callback<MusicLibraryResponseType>
  - name:  error 
    summary: Function to call upon receiving an error. 
    type: Callback<FailureResponse>
  - name: cancel
    summary: Function to call if the user presses the cancel button.
    type: Callback<FailureResponse>
  - name: autohide
    summary: Specifies that the library should be hidden automatically after media selection is completed.
    type: Boolean
    default: true
  - name: animated 
    summary: Boolean if the dialog should be animated when showing and hiding.
    type: Boolean
    default: true
  - name: mediaTypes
    summary: An array of media type constants defining selectable media.
    description: |
        Specify one or more of the see `MUSIC_MEDIA_TYPE` constants from <Titanium.Media>. To
        specify multiple types, either pass an array of values, or pass a 
        single value that represents the bitwise-OR of the desired media types. For example,
        the following values are equivalent:

            mediaTypes: [Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC, Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST] 

        Or:

            mediaTypes: Titanium.Media.MUSIC_MEDIA_TYPE_MUSIC|Titanium.Media.MUSIC_MEDIA_TYPE_PODCAST
    type: [Number, Array<Number>]
    default: All available types.
  - name: allowMultipleSelections 
    summary: Set to `true` to allow the user to select multiple items from the library.
    type: Boolean
    default: false

---
name: MusicLibraryResponseType
summary: |
    Simple object passed to the [openMusicLibrary](Titanium.Media.openMusicLibrary)
    `success` callback function.
properties:
  - name: representative
    summary: A single representative of the selected items.
    type: Titanium.Media.Item
  - name: items
    summary: A list of all the items chosen by the user.
    type: Array<Titanium.Media.Item>
  - name: types
    summary: |
        Media types in this collection, represented as the bitwise OR of the media type
        values for all media types represented in `items`.
    type: Number
   
# Pseudo-type for queryMediaLibrary argument
---
name: MediaQueryType
summary: A specifier for a media library query. By default, filters
    perform an exact match.
platforms: [iphone, ipad]
since: "1.8"
properties:
  - name: grouping
    summary: A constant that specifies the ordering of the result array.
        One of the `MUSIC_MEDIA_GROUP_*` constants specified on the
        <Titanium.Media> module.
    type: Number
  - name: mediaType
    summary: The media type to filter on. Value should be one of the
        `MUSIC_MEDIA_TYPE_` constants on <Titanium.Media>.
    type: [MediaQueryInfoType, Number]
  - name: title
    summary: The title to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: albumTitle
    summary: The album title to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: artist
    summary: The artist to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: albumArtist
    summary: The album artist to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: genre
    summary: The genre to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: composer
    summary: The composer to filter on. Value should be a String.
    type: [MediaQueryInfoType, String]
  - name: isCompilation
    summary: Filter by whether or not the item is a compilation.
        Value should be a Boolean.
    type: [MediaQueryInfoType, Boolean]
    
# Pseudo-type for query arguments
---
name: MediaQueryInfoType
summary: A full query descriptor for a filtering predicate.
platforms: [iphone, ipad]
since: "1.8"
properties:
  - name: value
    summary: The value for the given predicate. See the descriptions
        in <MediaQueryType> for information about which properties
        require which values.
    type: [Number, String, Boolean]
  - name: exact
    summary: Whether or not the predicate is for an exact match.  The
        default is `true`.
    type: Boolean
    
# Camera options pseudo-type
---
name: CameraOptionsType
summary: Simple object for specifying options to [showCamera](Titanium.Media.showCamera).
properties:
  - name: success 
    summary: Function to call when the camera is closed after a successful capture/selection.
    type: Callback<CameraMediaItemType>
  - name: error 
    summary: Function to call upon receiving an error.
    type: Callback<FailureResponse>
  - name: cancel 
    summary: Function to call if the user presses the cancel button.
    type: Callback<FailureResponse>
  - name: autohide 
    summary: Specifies if the camera should be hidden automatically after the media capture is completed.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
  - name: animated 
    summary: Specifies if the dialog should be animated upon showing and hiding.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
  - name: saveToPhotoGallery
    summary: Specifies if the media should be saved to the photo gallery upon successful capture.
    type: Boolean
    default: false
  - name: allowEditing
    summary: Specifies if the media should be editable after capture/selection.
    type: Boolean
    platforms: [iphone, ipad]
    default: false
  - name: mediaTypes 
    summary: |
        Array of media type constants to allow: `MEDIA_TYPE_PHOTO` or `MEDIA_TYPE_VIDEO`.
    type: Array<String>
    default: Both photo and video allowed.
    platforms: [iphone, ipad]
  - name: videoMaximumDuration
    summary: Maximum duration (in milliseconds) to allow video capture before completing.
    type: Number
    platforms: [iphone, ipad]
  - name: videoQuality 
    summary: Constant to indicate the video quality during capture. 
    type: Number
    platforms: [iphone, ipad]
  - name: showControls 
    summary: Indicates if the built-in camera controls should be displayed.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
  - name: overlay 
    summary: View to added as an overlay to the camera UI (on top).
    description: |
        On iOS, the overlay view is usually used in conjunction with `showControls: false`.
        The `transform` property can be used to scale and position the camera preview inside
        the overlay view.
    type: Titanium.UI.View
    default: no overlay view
  - name: transform
    summary: Transformation matrix to apply to the camera or photogallery view.
    description: |
        Can be used to size and position the camera or photogallery view behind an overlay view. 
    type: Titanium.UI.2DMatrix
    default: identity matrix
    platforms: [iphone, ipad]
  - name: inPopOver
    summary: Show the camera in a popover.
    description: |
        Use `inPopOver: true` on iPad to display the camera view in a popover.
    type: Boolean
    default: false
    platforms: [ipad]
  - name: popoverView 
    summary: View to position the camera or photo gallery popover on top of.
    description: |
        This property is only used if the camera is displayed in a 
        popover (`inPopOver` is `true`).
    type: Titanium.UI.View
    platforms: [ipad]
  - name: arrowDirection
    summary: Controls the type of arrow and position of the popover.
    description: |
        Specify one of the `POPOVER_ARROW_DIRECTION` constants from <Titanium.UI.iPad>.

        This property is only used if the camera is displayed in a 
        popover (`inPopOver` is `true`).
    type: Number
    platforms: [ipad]

# Photo Gallery options pseudo-type. Much like the camera one.
---
name: PhotoGalleryOptionsType
summary: |
    Simple object for specifying options to 
    [openPhotoGallery](Titanium.Media.openPhotoGallery).
properties:
  - name: success 
    summary: Function to call when the photogallery is closed after a successful selection.
    type: Callback<CameraMediaItemType>
  - name: error 
    summary: Function to call upon receiving an error.
    type: Callback<FailureResponse>
  - name: cancel 
    summary: Function to call if the user presses the cancel button.
    type: Callback<FailureResponse>
  - name: autohide 
    summary: Specifies if the photo gallery should be hidden automatically after the media
        selection is completed.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
  - name: animated 
    summary: Specifies if the dialog should be animated upon showing and hiding.
    type: Boolean
    default: true
    platforms: [iphone, ipad]
  - name: allowEditing
    summary: Specifies if the media should be editable after capture/selection.
    type: Boolean
    platforms: [iphone, ipad]
  - name: mediaTypes 
    summary: |
        Array of media type constants to allow: `MEDIA_TYPE_PHOTO` or `MEDIA_TYPE_VIDEO`.
    type: Array<String>
    default: Both photo and video allowed.
    platforms: [iphone, ipad]
  - name: popoverView 
    summary: View to position the photo gallery popover on top of.
    type: Titanium.UI.View
    platforms: [ipad]
  - name: arrowDirection
    summary: Controls the type of arrow and position of the popover.
    description: |
        Specify one of the `POPOVER_ARROW_DIRECTION` constants from <Titanium.UI.iPad>.
    type: Number
    platforms: [ipad]

---
name: CameraMediaItemType
summary: A media object from the camera or photo gallery.
extends: SuccessResponse
properties:
  - name: media
    summary: The media object, as a [Blob](Titanium.Blob).
    type: Titanium.Blob
  - name: mediaType
    summary: The type of media, either `MEDIA_TYPE_PHOTO` or `MEDIA_TYPE_VIDEO` defined in <Titanium.Media>.
    type: String
  - name: cropRect
    summary: Simple object defining the user's selected crop rectangle, or `null` if the user has not edited the photo.
    type: CropRectType
  - name: success
    summary: Indicates if the operation succeeded. Returns `true`.
    description: Returns `true`.
    type: Boolean
    since: "3.1.0"
  - name: error
    summary: Error message, if any returned.
    description: Will be undefined.
    type: String
    since: "3.1.0"
  - name: code
    summary: Error code. Returns 0.
    description: Error code will be 0.
    type: Number
    since: "3.1.0"

# Arguably we might need a global Rect pseudotype. For now, define locally
---
name: CropRectType
summary: Simple object for describing the crop rectangle for an image.
properties: 
  - name: x
    summary: X coordinate of the crop rectangle's upper-left corner.
    type: Number
  - name: y
    summary: Y coordinate of the crop rectangle's upper-left corner.
    type: Number
  - name: width
    summary: Width of the crop rectangle, in pixels.
    type: Number
  - name: height
    summary: Height of the crop rectangle, in pixels.
    type: Number
---
name: PreviewImageOptions
summary: Options passed to <Titanium.Media.previewImage>.
platforms: [android]
properties:
  - name: image
    summary: The image to preview. Must be a blob based on a file, such as from <Titanium.Filesystem.File.read>.
    type: Titanium.Blob
    accessors: false
  - name: success
    summary: Function to be called back if the preview succeeds. No info is passed.
    type: Callback<Object>
    accessors: false
  - name: error
    summary: Function called back if the preview fails. Check the `message` property of passed back parameter.
    type: Callback<PreviewImageError>
    accessors: false
---
name: PreviewImageError
summary: The parameter passed to the `error` callback of <PreviewImageOptions>.
platforms: [android]
extends: FailureResponse
properties:
  - name: message
    summary: Description of the error.
    type: String
    accessors: false
    deprecated:
        since: "3.1.0"
  - name: code
    summary: Error code, if applicable. See <Titanium.Media> constants such as [DEVICE_BUSY](Titanium.Media.DEVICE_BUSY).
    type: Number
    accessors: false
  - name: success
    summary: Indicates if the operation succeeded. Returns `false`.
    description: Returns `false`.
    type: Boolean
    since: "3.1.0"
  - name: error
    summary: Error message, if any returned.
    description: May be undefined.
    type: String
    since: "3.1.0"
---
name: ScreenshotResult
summary: The parameter passed to the <Titanium.Media.takeScreenshot> callback.
platforms: [iphone, ipad, android, tizen]
properties:
  - name: media
    summary: The screenshot image.
    type: Titanium.Blob
    accessors: false
